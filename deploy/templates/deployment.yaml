apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  progressDeadlineSeconds: 1800

  selector:
    matchLabels:
      app: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      terminationGracePeriodSeconds: 100
      volumes:
        - name: google-cloud-key
          secret:
            secretName: {{ .Values.serviceAccountSecret }}
        - name: cache-volume
          emptyDir:
            medium: Memory
        {{ if .Values.options.internalTLS }}
        {{ if .Values.internalTLS.certName }}
        - name: internal-cert
          secret:
            secretName: "{{ .Values.internalTLS.certName }}"
        {{ else }}
        - name: internal-cert
          secret:
            secretName: "{{.Values.internalTLS.secretName}}"
        {{ end }}
        {{ end }}
      containers:
        - name: "{{ .Release.Name }}-container"
          securityContext:
            allowPrivilegeEscalation: false
            seccompProfile: 
              type: RuntimeDefault
          image: "{{ required "image.repository must be set!" .Values.image.repository }}:{{ required "image.tag must be set!" .Values.image.tag }}"
          readinessProbe:
            httpGet:
              path: {{ .Values.service.healthEndpoint }}
              port: {{ .Values.service.port }}
            periodSeconds: {{ .Values.readiness.periodSeconds }}
            successThreshold: 1
            failureThreshold: {{ .Values.readiness.failureThreshold }}
            timeoutSeconds: 5
            initialDelaySeconds: 5
          livenessProbe:
            httpGet:
              path: {{ .Values.service.healthEndpoint }}
              port: {{ .Values.service.port }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
            successThreshold: 1
            failureThreshold: {{ .Values.liveness.failureThreshold }}
            timeoutSeconds: 3
            initialDelaySeconds: 5
          startupProbe:
            httpGet:
              path: {{ .Values.service.healthEndpoint }}
              port: {{ .Values.service.port }}
            periodSeconds: {{ .Values.startup.periodSeconds }}
            successThreshold: 1
            failureThreshold: {{ .Values.startup.failureThreshold }}
            timeoutSeconds: 3
            initialDelaySeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
              name: http

          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /var/secrets/google/key.json
            - name: GAE_SERVICE
              value: "{{ .Release.Name }}-gke"
            - name: GOOGLE_CLOUD_PROJECT
              value: {{ .Values.gcpProject }}
            - name: IS_GKE
              value: "true"
            - name: SERVER_HOST_NAME
              value: {{ .Values.serverHostName }}
            {{ range .Values.env }}
            - name: {{ .name }}
              {{ if .value }}
              value: {{ .value }}
              {{ end }}
              {{ if .valueFrom }}
              valueFrom:
                {{- toYaml .valueFrom | nindent 16 }}
              {{ end }}
            {{ end }}            
          volumeMounts:
            - name: google-cloud-key
              mountPath: /var/secrets/google
            - name: cache-volume
              mountPath: /tmp

        {{ if .Values.options.internalTLS }}
        - name: nginx
          image: gcr.io/guardio/tls-sidecar:1.0
          securityContext:
            allowPrivilegeEscalation: false
            seccompProfile: 
              type: RuntimeDefault
          readinessProbe:
            httpGet:
              path: {{ .Values.service.healthEndpoint }}
              port: {{ .Values.service.port }}
            periodSeconds: {{ .Values.readiness.periodSeconds }}
            successThreshold: 1
            failureThreshold: {{ .Values.readiness.failureThreshold }}
            timeoutSeconds: 5
            initialDelaySeconds: 5
          livenessProbe:
            httpGet:
              path: {{ .Values.service.healthEndpoint }}
              port: {{ .Values.service.port }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
            successThreshold: 1
            failureThreshold: {{ .Values.liveness.failureThreshold }}
            timeoutSeconds: 3
            initialDelaySeconds: 5
          startupProbe:
            httpGet:
              path: {{ .Values.service.healthEndpoint }}
              port: {{ .Values.service.port }}
            periodSeconds: {{ .Values.startup.periodSeconds }}
            successThreshold: 1
            failureThreshold: {{ .Values.startup.failureThreshold }}
            timeoutSeconds: 3
            initialDelaySeconds: 5
          resources:
            limits:
              memory: "200Mi"
            requests:
              cpu: "10m"
              memory: "20Mi"
          ports:
          - containerPort: 443
          volumeMounts:
          - mountPath: /etc/nginx/ssl
            name: "internal-cert"
        {{ end }}        